{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> A Go Game Engine build with GLFW and OpenGL. <p> </p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Installation</li> <li>Usage</li> <li>Contributing</li> <li>License</li> <li>About</li> </ul>"},{"location":"#usage","title":"Usage","text":""},{"location":"#needed-things","title":"Needed things","text":"<p>There are some extra things you will need to use Vuelto, see them here</p>"},{"location":"#go-package","title":"Go package","text":"<p>We have a Go package published, so run this command to add it to your go.mod:</p> <pre><code>go get github.com/dimkauzh/vuelto-engine\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>All of our examples are inside the examples directory, so take a look there is you want a example.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We are fully open to contributions, but I will check and test your code before merging it into the dev branch. All your code thats accepted will only be merged into the dev branch, and will be later released with the next release.</p>"},{"location":"#license","title":"License","text":"<p>Vuelto is licensed under the GPLv3 Licence.</p>"},{"location":"#about","title":"About","text":"<p>Vuelto is a game engine built with GLFW and OpenGL using Go. My goal is to achieve a good and easy to use game engine for everyone. I am currently working on the engine, and I am not planning to releasing Vuelto (its not ready). I am planning to release a website for the engine that contains a documentation for the engine and a roadmap/changelog. I am also planning to release a couple of tutorials on how to use vuelto. I hope you will enjoy using vuelto. Have fun!</p>"},{"location":"docs/INSTALLATION/","title":"Go package","text":"<p>We have a Go package published, so run this command to add it to your go.mod:</p> <pre><code>go get github.com/dimkauzh/vuelto-engine\n</code></pre>"},{"location":"docs/INSTALLATION/#installation","title":"Installation","text":""},{"location":"docs/INSTALLATION/#linux","title":"Linux","text":"<p>You have to have X11-dev-packages and C compiler installed.</p>"},{"location":"docs/INSTALLATION/#x11","title":"X11","text":"<p>On Debian and derivates like Ubuntu and Linux Mint the xorg-dev meta-package pulls in the development packages for all of X11.</p> <pre><code>sudo apt install xorg-dev libasound2-dev gcc\n</code></pre> <p>On Fedora and derivatives like Red Hat the X11 extension packages libXcursor-devel, libXi-devel, libXinerama-devel and libXrandr-devel required by GLFW pull in all its other dependencies.</p> <pre><code>sudo dnf install libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel alsa-lib-devel gcc\n</code></pre>"},{"location":"docs/INSTALLATION/#mac","title":"Mac","text":"<p>You have to have Xcode command line tools and CMake inatalled.</p>"},{"location":"docs/INSTALLATION/#xcode","title":"Xcode","text":"<pre><code>xcode-select --install\n</code></pre>"},{"location":"docs/INSTALLATION/#windows","title":"Windows","text":"<p>You have to have a C compiler installed. You can also use WSL, if so follow the Linux instructions.</p> <p>Download Go from the download page and follow instructions. </p> <p>Install one of the available C compilers for windows, the following are tested with Go and Fyne: - MSYS2 with MingW-w64 - msys2.org - TDM-GCC - tdm-gcc.tdragon.net - Cygwin - cygwin.com</p> <p>In Windows your graphics driver will already be installed, but it is recommended to ensure they are up to date.</p> <p>The steps for installing with MSYS2 (recommended) are as follows:</p> <ol> <li>Install MSYS2 from msys2.org</li> <li>Once installed do not use the MSYS terminal that opens</li> <li>Open \"MSYS2 MinGW 64-bit\" from the start menu</li> </ol> <p>Execute the following commands (if asked for install options be sure to choose \"all\"):</p> <pre><code>pacman -Syu\npacman -S git mingw-w64-x86_64-toolchain\n</code></pre> <p>You will need to add /c/Program\\ Files/Go/bin and ~/Go/bin to your $PATH, for MSYS2 you can paste the following command into your terminal:</p> <pre><code>echo \"export PATH=\\$PATH:/c/Program\\ Files/Go/bin:~/Go/bin\" &gt;&gt; ~/.bashrc\n</code></pre> <p>For the compiler to work on other terminals you will need to set up the windows %PATH% variable to find these tools. Go to the \"Edit the system environment variables\" control panel, tap \"Advanced\" and add \"C:\\msys64\\mingw64\\bin\" to the Path list.</p>"},{"location":"todo/","title":"Todo","text":""},{"location":"todo/#v1","title":"V1","text":"<ul> <li>[x] Application<ul> <li>[x] Window</li> <li>[x] Input</li> </ul> </li> <li>[ ] Renderer<ul> <li>[x] OpenGL</li> <li>[x] Rects</li> <li>[x] Images</li> <li>[ ] Animations</li> </ul> </li> <li>[ ] Physics Engine<ul> <li>[ ] Collision</li> <li>[ ] Gravity</li> <li>[ ] Forces</li> </ul> </li> <li>[ ] Audio<ul> <li>[ ] Sound</li> <li>[ ] Music</li> </ul> </li> <li>[ ] Math<ul> <li>[ ] Vectors</li> </ul> </li> <li>[ ] Docs<ul> <li>[x] Website</li> <li>[ ] Tutorials</li> <li>[ ] Docs</li> </ul> </li> </ul>"},{"location":"todo/#v2","title":"V2","text":"<ul> <li>[ ] GUI</li> <li>[ ] Buttons</li> <li>[ ] Text</li> <li>[ ] Images</li> <li>[ ] Networking</li> <li>[ ] TCP</li> <li> <p>[ ] UDP</p> </li> <li> <p>[ ] Vuelto Editor</p> </li> <li>[ ] Full blown editor</li> <li>[ ] Scripting</li> <li>[ ] Plugins</li> <li>[ ] Customization</li> <li>[ ] Exporting</li> <li>[ ] Importing</li> <li>[ ] Project management</li> </ul>"}]}